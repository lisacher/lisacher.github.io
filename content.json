{"pages":[{"title":"categories","text":"","link":"/categories/index.html"},{"title":"關於我","text":"💕 一個愛插花、烘培與寫程式的前空姐 記錄我的不專業前端知識 😆 還有不專業的生活心得 😳","link":"/about/index.html"}],"posts":[{"title":"限時挑戰：電商網頁切版","text":"參考網站：Basic T-shirt Store 挑戰作品(CodePen)：T-shirt Store 你為何會選擇這個專案？ 在這個環境裡，無庸置疑，電商絕對是最接近每一個人的生活日常，選擇從自己熟悉的電商開始練習是最直覺的想法，一個電商網站涵蓋了許多與使用者互動的多項功能，一個小小細節就能體現出工程師的細膩程度，以及各種必備的基礎技術 你使用了什麼技術？ 這次的排版都是以手刻為主， 商品的排版主要靠 CSS grid-template 的 auto-fit，讓桌機與手機能互相適應視窗大小，調整商品數量顯示，並加上了 hover 的滑鼠滑過跳出照片與詳細文字的功能，讓右上角的愛心功能也有滑鼠指標點擊（pointer）的效果 Navbar 的手機版漢堡選單功能使用了 input checked 加上偽元素手刻出三條線漢堡效果，並且設定 position 為 fixed，固定住上列，不讓導覽列跑掉 哪部分你相對能掌握？哪裡花了最多時間？ 在 grid 排版裡是花最多時間的，以往習慣了套用 bootstrap，直覺式操作許久，現在一個一個自己手刻，相對而言花了更多時間研究功能，也思考很久哪些部分可以使用 grid，而哪些地方可以不需要 較能掌握的地方是在調整使用者互動上，加入按鈕、文字大小、調整位置這些功能部分，因為有實際網站可以參考，所以相對而言較能掌握 過程中碰到什麼困難？又如何克服？（例如：查找網路文件） 在 grid 上面查了很多資料，光是選對資料來看就是一個很重要的事情，必須對症下藥，中間也一度卡在漢堡選單為什麼點了卻出不來選單，還有字為什麼老是對不準，是不是版型哪裡有問題等等，最後多方嘗試各種排版，調整 html 才找到正確答案 過程中你有對哪個前端技術有特別深刻的學習 還是 grid ! 雖然現今已有 bootstrap 可以使用，但還是需要理解詳細原理與細節，否則在修改細節方面不知如何下手，如果詳細了解後，今後也知道該怎麼修改與解決問題","link":"/2021/08/03/Challenge/"},{"title":"切版挑戰：Table 的實戰","text":"本次的挑戰主要有兩個項目 廣告被選擇時的樣式 當廣告被選擇時，也就是第一欄的 checkbox 被勾選的時候，該 table row 的樣式會有所改變，整行轉為醒目的橘色底色以利辨識 固定 table header 當表單資訊向下滑動時，table header 是固定置頂的，讓使用者可以清楚知道每一個欄位代表什麼資訊。 你完成了什麼？花了多少時間？為什麼會做這些事？ 在碰到題目的時候會先思考有什麼樣的解決方式，本次挑戰的題目解決方式有許多種，上網查詢資料過程中也不難發現解決方式，但是該如何應用在項目上又是一個問題。 本次共花費約 2 小時，包含搜尋資料與實作 在 header 置頂的部分，我選擇直接修改 css 的 thead, tbody ，在 tbody 加入高度以及 overflow: auto 的功能，即能完成 header 是固定置頂的，這個方式是最為簡單與理解的，且操作上也沒有什麼問題。 在廣告被選擇時的部分，最直覺就是使用 Javascript，綁監聽器，監聽 table__row — checked， css 裡新增 checked 後的樣式即可完成，順帶一提，因為勾選而顯示顏色是為了方便使用者使用，那麼我便多新增了一個功能，讓使用者滑鼠移過時能有淺灰色背景顯示，更方便閱讀，另外要注意的是，header 也在 row — checked:hover 裡，所以額外把 header 的 hover 一起加入，讓 header 被選到時不會變色。 碰到什麼困難？如何解決？ 廣告被選擇時變色的功能 原本在思考是否能直接修改 css 或 html 來改變，但是考慮到 css 選擇器無法像 Javascript 一樣選擇到父層，所以還是使用了 Javascript，直接綁定監聽器來操作。 回頭檢視流程與成果時，哪些部分你覺得可能有改善的空間？ 也許可以多嘗試不同的做法，但依使用習慣來說大部分的人還是想找最簡單有效率的方法，原本操作 header 的部分試過很多不同的方法，但是都很繁雜，後來找到方法直接修改 thead tbody 以後，瞬間豁然開朗！ 也許在碰到事情的時候，多方思考與積極尋找答案是很好的，也許會有不同收穫！","link":"/2021/08/03/TableChallenge/"},{"title":"Markdown常用語法整理","text":"以下是一些常用到的 Markdown 語法整理， 歡迎多加參考利用 👏 🙌 標題 This is an H1 This is an H2 This is an H2 This is an H2 This is an H2 This is an H6 # This is an H1 ## This is an H2 ### This is an H2 #### This is an H2 ##### This is an H2 ###### This is an H6 文字樣式 凸顯字 斜體字 粗體字 底線 刪除線 `凸顯字` *斜體字* **粗體字** 底線 ~~刪除線~~ 清單 沒有順序的清單使用星號、加號或是減號： Red Green Blue * Red * Green - Blue 有順序的清單則使用數字做開頭： Bird McHale Parish 1. Bird 4. McHale 5. Parish 引言 我正在使用引言 引言的第二行要加 “兩個空白鍵” > 我正在使用引言 分隔線 * * * *** ***** - - - --- 圖片 方框內容為圖片替代文字（無法顯示圖片時） ()後面則是圖片路徑， &quot;&quot;裡可以填上圖片標題 ![Alt text](/path/to/img.jpg) ![Alt text](/path/to/img.jpg \"Optional title\") 待辦事項 [ ] 待辦清單 1 [x] 完成清單 2 [x] 完成清單 3 - [ ] 待辦清單1 - [x] 完成清單2 - [X] 完成清單3 第一行段落內容 第二行段落內容 第一行段落內容 + 兩個空白鍵 第二行段落內容 自動連結 http://daisy821.me &lt;http://daisy821.me&gt; 表格 直接在文字裡加入以下： (外面的 “｜” 不是一定要在意他的整齊度) 表格 文字 內容 第一行 第一行 第一行 第二行 第二行 第二行 第三行 第三行 第三行 | Form | Word | Title | | ------| :----:| -----: | | 第一行 | 第一行 | 第一行 | | 第二行 | 第二行 | 第二行 | | 第三行 | 第三行 | 第三行 | 加入程式碼 只要簡單地縮排 4 個空白或是 1 個 tab 就可以： This is a normal paragraph: This is a code block. 參考文章： Markdown 文件","link":"/2021/08/05/markdown-new/"},{"title":"MyFirstPost","text":"10d79030e8222445804370796b90fca1f57355b945192da6f9fbbb4150130b7d69a8f61919cd3aaa77baa00c9dfb31041358c0833b625c5cf08f9b08b483d37724f1f6b55712e8cc8237bdf6e8ab7a675dd75f871b846511a182d04c383d8eefdeaa8eed32fa5929740a33b7cfd0b64d 請輸入您的正確密碼","link":"/2021/08/03/MyFirstPost/"},{"title":"Hello!第一次見面","text":"第一次用 Hexo 架了一個部落格，以此紀念一下～ 時間才是最好的法官，是非成敗，我們未來見。","link":"/2021/08/03/hello-world/"},{"title":"輕鬆部署 Github Page","text":"當網頁工程師最期待的就是把網頁部署到線上！ 只要前端的網頁是靜態檔案，不需要搭配固定的伺服器，就可以輕鬆把網頁部署在雲端上！ 打包 Vue 檔案 在終端機輸入： $ npm run build Vue CLI 就會自動幫我們把所有寫好的 Vue 組件和設定等等一併作打包的動作，打包好了之後，在專案資料夾中，你會看到多了一個 dist 資料夾，裡面放的就是靜態網頁所需的所有檔案 部署到 Github 在此之前，你會需要一個 Github 專案來部署，所以可以先在 github 註冊， 在 GitHub 上開一個 repository，而你的網址將會是： https://{username}.github.io/{repository-name} 接下來我們可以把打包好的 Vue 檔案推上 master 分支就可以顯示了，但是每次部署前都需要先執行 npm run build 然後要手動 push 到 GitHub 上 步驟真的很（繁瑣），所以就有了讓工程師（偷懶）的方式！ 在根目錄新增 deploy.sh 在專案的根目錄中，要先建立一支部署用的指令檔，取名叫做deploy.sh 接著在這支檔案中貼上下面的內容： #!/usr/bin/env sh # abort on errors set -e # build npm run build # navigate into the build output directory cd dist # if you are deploying to a custom domain # echo 'www.example.com' > CNAME git init git add -A git commit -m 'deploy' # if you are deploying to https://.github.io # git push -f https://github.com//.GitHub.io.git master # if you are deploying to https://.Github.io/ # git push -f https://github.com//.git master:gh-pages git push -f https://github.com/ALPHACamp/forum-front-end-vue.git master:gh-pages cd - 新增 vue.config.js 因為部署到 GitHub 上時，我們的網址並不是直接在路由的根目錄，而是在 repository 的資料夾內，因此需要告訴 Vue 我們真正檔案所在的路徑，在根目錄中新增檔案 vue.config.js 接著在裡面貼上這段內容，用以告訴 Vue 實際的檔案位置： module.exports = { publicPath: process.env.NODE_ENV === 'production' ? '/你的專案名稱/' : '/' } 接下來就是部署上 Github 了！ 將檔案部署到 GitHub 上 需要在專案資料夾的根目錄透過終端機輸入： $ ./deploy.sh 若執行這個指令時出現 permission denied: ./deploy.sh 的錯誤時，表示沒有執行這個檔案的權限，需要先透過下面的指令讓此檔案可以被執行： $ chmod +x ./deploy.sh 接著一樣在輸入 ./deploy.sh 就可以了 成功部署後，在 GitHub 頁面上應該會發現多了一個名為 gh-pages 的分支 接著到 Github 頁面的 Settings 進行 GitHub Pages 的設定，側邊往下拉會有一個 Pages 的欄位，點進去後，在 Source 的地方選擇 gh-pages 設定完成後，進到 GitHub Pages 給你的連結，就可以看到剛部署好的網頁囉！ 以後想要部署的話，也只要在終端機輸入 ./deploy.sh 就可以輕鬆部署了！ 😆","link":"/2021/08/19/%E8%BC%95%E9%AC%86%E9%83%A8%E7%BD%B2-Github-Page/"},{"title":"限時挑戰 Simple Twitter 專案","text":"作品網址：點我 第一次與團隊合作復刻 Twitter 專案，並挑戰了公開聊天室的功能 專案的開始 團隊是由四人為一組的前後端分離模式，分別為兩人後端、兩人前端組成，而我是擔任前端的角色，為期兩週的開發與挑戰。 專案開始前，大家先約好各自時間進行一次小組會議，探討合作模式，而我們的小組溝通與時程規劃都在 Slack 與 Trello 進行。 Trello 工作分配與進度時程 工作的分配與進度 專案開始後，我與前端組員 Teddy 又進行了一次討論，我們這次使用的是 Vue 開發專案，先後討論了 Views 與 Component 的共識、因為彼此都有先整理一份關於此次 Simple Twitter 設計稿資料與元件組成，所以很快地在這方面達成共識 前端確定共識後，就與後端組員再次進行一次會議與討論，前端提供了詳細規格給予後端，而後端也給予了我們在 JSON 的一些資料格式參考，避免我們在串接時因為命名或規格不一產生問題 前端提供之規格參考 後端提供的資料回應格式 我與 Teddy 各自分配好頁面的進度，就開始著手參與製作，此時此刻後端也正在進行著它們的路由設計，彼此搭配很有默契的在我們結束刻好畫面後，給了我們 API 路由去串接與測試 串接 API 在串接之前都是得心應手，串接後就開始面對不同的考驗，與解決各式各樣的 Bug！ 照理說，我們如果資料格式都一致的話，串接不會出現太多問題，但碰巧就是有問題發生了，此時此刻翻遍了所有 Alpha Camp 教過的串接課程，沒有發現錯誤的時候，問組員就是最快的方式！ 記得最深刻的問題是，為什麼我照著應該是這樣的 API 路由寫法，結果還是出現了錯誤呢？ 與組員討論問題原因，與查找資料後，發現了原來是後端與前端的資料寫法不同而產生的原因，在寫法上如果改掉某些原以為後端已經給了的參數部分，就能串接成功，順利解除 Bug 真的是值得開心的事情！ 限時 3 天挑戰公開聊天室功能 在 AC 週五的中午開放挑戰功能後，我們立刻進入狀態，大家都著手完成著自己份內的事，而我們這次使用的是 Socket.io 來開發 而我在此次開發過程，負責前端的頁面呈現，把畫面都刻出來，雖然在串接過程中遇到的種種問題都迎刃而解，多的是靠強大的組員，但還是慶幸大家能在截止 12 點時準時繳交作業，並且一起熬夜把想修改的小細節繼續補足， 在 Socket.io 裡，遇到的問題 無法在登入聊天室時，即時正確顯示上線人數 後來發現這個問題許多人都有發生過，因為 Vue 的 SPA (Single Page Application) ，造成只能重新整理畫面才會獲得 token，否則回傳的是 null，而我們的解決辦法是，後端在登入後，再次傳送上線使用者資訊給前端用於渲染畫面，我們這裡也把資料改寫在同一個 Views 裡，這才解決問題。 專案的結束與心得 第一次與團體合作開發一個網站！從原本的擔心自己做不到甚至做不好，到完成了所有的種種，都是有一步一腳印的痕跡，雖然稱不上完美，但是這個經驗十分寶貴，這兩個禮拜非常非常地專心在這件事情上，而我也想像不到自己每天花了非常多時間在這上面，學習到了更多知識，切版有更多面向的考量，對於 Vue 也是更加熟悉了，串接這部分也更加掌握了一些，當然很多都是要謝謝組員們的幫忙，他們的可靠才有這個作品產生！","link":"/2021/08/03/simpleTwitter/"},{"title":"好久不見","text":"2023年了 在前端學習之路上是越來越順手了 也很久沒有更新這裡 紀念一下30歲我所獲得的，是無窮盡的知識 未來也會繼續加油！","link":"/2023/09/03/%E5%A5%BD%E4%B9%85%E4%B8%8D%E8%A6%8B/"}],"tags":[{"name":"前端","slug":"前端","link":"/tags/%E5%89%8D%E7%AB%AF/"},{"name":"限時挑戰","slug":"限時挑戰","link":"/tags/%E9%99%90%E6%99%82%E6%8C%91%E6%88%B0/"},{"name":"網頁切版","slug":"網頁切版","link":"/tags/%E7%B6%B2%E9%A0%81%E5%88%87%E7%89%88/"},{"name":"電商","slug":"電商","link":"/tags/%E9%9B%BB%E5%95%86/"},{"name":"HTML","slug":"HTML","link":"/tags/HTML/"},{"name":"CSS","slug":"CSS","link":"/tags/CSS/"},{"name":"markdown","slug":"markdown","link":"/tags/markdown/"},{"name":"前端 front-end","slug":"前端-front-end","link":"/tags/%E5%89%8D%E7%AB%AF-front-end/"},{"name":"github","slug":"github","link":"/tags/github/"},{"name":"網頁部署","slug":"網頁部署","link":"/tags/%E7%B6%B2%E9%A0%81%E9%83%A8%E7%BD%B2/"},{"name":"專案","slug":"專案","link":"/tags/%E5%B0%88%E6%A1%88/"},{"name":"Vue","slug":"Vue","link":"/tags/Vue/"},{"name":"Javascript","slug":"Javascript","link":"/tags/Javascript/"}],"categories":[{"name":"web前端","slug":"web前端","link":"/categories/web%E5%89%8D%E7%AB%AF/"},{"name":"學習紀錄","slug":"web前端/學習紀錄","link":"/categories/web%E5%89%8D%E7%AB%AF/%E5%AD%B8%E7%BF%92%E7%B4%80%E9%8C%84/"},{"name":"學習記錄","slug":"web前端/學習記錄","link":"/categories/web%E5%89%8D%E7%AB%AF/%E5%AD%B8%E7%BF%92%E8%A8%98%E9%8C%84/"}]}